{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/shared.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng6-toastr-notifications\";\nimport * as i5 from \"src/app/services/get-contacts.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction ContactListCreateComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" *Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactListCreateComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" *Surname is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactListCreateComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1, \" *Phone number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactListCreateComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 14);\n    i0.ɵɵtext(1, \" *Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ContactListCreateComponent = /*#__PURE__*/(() => {\n  class ContactListCreateComponent {\n    constructor(formBuilder, sharedService, router, toastr, getContacts) {\n      this.formBuilder = formBuilder;\n      this.sharedService = sharedService;\n      this.router = router;\n      this.toastr = toastr;\n      this.getContacts = getContacts;\n      sharedService.setViewContactId(0);\n      this.createContactForm = formBuilder.group({\n        id: [0],\n        name: [\"\", Validators.required],\n        surname: [\"\", Validators.required],\n        phoneNumber: [\"\", Validators.required],\n        email: [\"\", Validators.email]\n      });\n    }\n\n    ngOnInit() {}\n\n    createCustomer() {\n      if (this.createContactForm.valid) {\n        const promise = this.getContacts.getContacts();\n        promise.then(response => {\n          const formValues = this.createContactForm.value; //Provjeravamo da li postoje vec kontakti u listi, ako da onda trazimo max id i inkrementujemo ga za jedan,\n          //ako je duzina 0 onda cemo postaviti id da bude 1\n\n          formValues.id = response.length > 0 ? response.map(contact => contact.id).sort((a, b) => a - b)[response.length - 1] + 1 : 1;\n          response.push(formValues);\n          this.createContactForm.reset();\n          this.toastr.successToastr(\"Contact was successfully added.\", \"Success!\");\n        }, error => {\n          this.toastr.warningToastr(\"Error. Contact not added!\", \"Alert!\");\n        });\n      } else {\n        this.toastr.warningToastr(\"This is not a valid form.\", \"Alert!\");\n      }\n    }\n\n    goBack() {\n      this.router.navigate([\"/read\"]);\n    }\n\n  }\n\n  ContactListCreateComponent.ɵfac = function ContactListCreateComponent_Factory(t) {\n    return new (t || ContactListCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SharedService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrManager), i0.ɵɵdirectiveInject(i5.GetContactsService));\n  };\n\n  ContactListCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactListCreateComponent,\n    selectors: [[\"contact-list-create\"]],\n    decls: 28,\n    vars: 6,\n    consts: [[\"align\", \"center\", 1, \"mt-5\"], [1, \"mt-3\", \"col-md-4\", \"mx-auto\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mt-3\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"Enter contact name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"surname\", \"placeholder\", \"Enter contact surname\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"phoneNumber\", \"placeholder\", \"Enter contact phone number\", 1, \"form-control\"], [1, \"form-group\", \"mt-3\", \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"Enter contact email\", 1, \"form-control\"], [\"class\", \"warning\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"mr-1\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"ms-3\", 3, \"disabled\"], [1, \"text-danger\"], [1, \"warning\"]],\n    template: function ContactListCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Create Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ContactListCreateComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.createCustomer();\n        });\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \"Name: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, ContactListCreateComponent_span_8_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11, \"Surname: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 6);\n        i0.ɵɵtemplate(13, ContactListCreateComponent_span_13_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 3);\n        i0.ɵɵelementStart(15, \"label\");\n        i0.ɵɵtext(16, \"Phone Number: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 7);\n        i0.ɵɵtemplate(18, ContactListCreateComponent_span_18_Template, 2, 0, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 8);\n        i0.ɵɵelementStart(20, \"label\");\n        i0.ɵɵtext(21, \"E-mail: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 9);\n        i0.ɵɵtemplate(23, ContactListCreateComponent_span_23_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ContactListCreateComponent_Template_button_click_24_listener() {\n          return ctx.goBack();\n        });\n        i0.ɵɵtext(25, \"Go Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 12);\n        i0.ɵɵtext(27, \"Add Contact\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        let tmp_3_0;\n        let tmp_4_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.createContactForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.createContactForm.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.createContactForm.get(\"surname\")) == null ? null : tmp_2_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.createContactForm.get(\"phoneNumber\")) == null ? null : tmp_3_0.hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx.createContactForm.get(\"email\")) == null ? null : tmp_4_0.hasError(\"email\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.createContactForm.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i6.NgIf],\n    styles: [\"\"]\n  });\n  return ContactListCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}